"pragma solidity >=0.4.0 <0.6.0;\n\ncontract Counters {\n    mapping(address => uint256[]) public countersByUser;\n\n    function newCounter() public returns (uint256) {\n        return countersByUser[msg.sender].push(0) - 1;   \n    }\n\n    function incrementCounter(uint256 index, uint256 amount) public returns (uint256) {\n        uint256 prevValue = getCounter(index);\n\n        uint256 newValue = prevValue + amount;\n\n        setCounter(index, newValue);\n\n        return newValue;\n    }\n    \n    function setCounter(uint256 index, uint256 newValue) public {\n        uint256[] storage counters = getCounters();\n\n        return setCounterByIndex(counters, index, newValue);\n    }\n\n    function setCounterByIndex(uint256[] storage counters, uint256 index, uint256 newValue) private {\n        counters[index] = newValue;\n    }\n\n    function getCounter(uint256 index) public view returns(uint256) {\n        uint256[] storage counters = getCounters();\n\n        return getCounterByIndex(counters, index);\n    }\n\n    function getCounterByIndex(uint256[] storage counters, uint256 index) private view returns (uint256) {\n        uint256 counter = counters[index];\n\n        return counter;\n    }\n\n    function getCounters() private view returns (uint256[] storage) {\n        return countersByUser[msg.sender];\n    }\n}\n"